<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>SFML-UI - User Interface library for SFML</title>
        <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"/>
        <!--<link rel='stylesheet' type='text/css' href="http://fonts.googleapis.com/css?family=Ubuntu:400,700,400italic"/>-->
        <link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
    </head>
    <body>
        <div id="banner-container">
            <div id="banner">
                <span id="sfml">SFML-UI</span>
            </div>
        </div>
        <div id="content">
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li><li class="navelem"><a class="el" href="dir_c0a853e81d6f1c1f0a3eb7a27dc24256.htm">SFML</a></li><li class="navelem"><a class="el" href="dir_02c465a03076eb7f78f0386ccd2b72a1.htm">UI</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CheckBoxGroup.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Copyright Â© 2013 mathdu07</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  This program is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  it under the terms of the GNU Lesser General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This program is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  GNU Lesser General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#ifndef CHECKBOXGROUP_H_</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#define CHECKBOXGROUP_H_</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;SFML/UI/ComponentObserver.hpp&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;SFML/UI/CheckBox.hpp&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacesf.htm">sf</a></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">namespace </span>ui</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;{</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1CheckBoxGroup.htm">   30</a></span>&#160;<span class="keyword">class </span><a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm">CheckBoxGroup</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1ui_1_1ComponentObserver.htm">sf::ui::ComponentObserver</a></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">//CONSTRUCTORS - DESTRUCTOR -----------------------------------------------------------</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#ad608973ab97a6e6c0dc68617e8ba6f8a">CheckBoxGroup</a>();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm">CheckBoxGroup</a>();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">//-------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment">//METHODS -----------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#a2cfb0472b640eec59a3f4803846072c8">addCheckBox</a>(<a class="code" href="classsf_1_1ui_1_1CheckBox.htm">CheckBox</a> &amp;checkbox);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::set&lt;CheckBox*&gt;::const_iterator <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#ae850c1714f7a5a453219886edb33af28">getCheckboxBegin</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    std::set&lt;CheckBox*&gt;::const_iterator <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#a56f7d38610948a14c782eb72080dbf7d">getCheckboxEnd</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#aee82d7ae90923397f9c0e7c0bf4b279e">removeCheckbox</a>(<a class="code" href="classsf_1_1ui_1_1CheckBox.htm">CheckBox</a>&amp; checkbox);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#a5927d831fc3b082572cd11a312244bfe">countCheckbox</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#a5ac74c7de74c7fa11c1ee22249f52edd">isCheckBoxInGroup</a>(<a class="code" href="classsf_1_1ui_1_1CheckBox.htm">CheckBox</a> *checkbox) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1CheckBoxGroup.htm#addd05ac8e6437217ec91b1c64dbebd2b">onComponentEvent</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1ui_1_1ComponentEvent.htm">ComponentEvent</a> &amp;event);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="classsf_1_1ui_1_1CheckBox.htm">CheckBox</a>* firstSelected(<a class="code" href="classsf_1_1ui_1_1CheckBox.htm">CheckBox</a>* excluded = 0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="comment">//-------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="comment">//GETTERS - SETTERS -------------------------------------------------------------------</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">//-------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="comment">//FIELDS ------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    std::set&lt;CheckBox*&gt; m_checkBox;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="comment">//-------------------------------------------------------------------------------------</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;};</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;} <span class="comment">/* namespace ui */</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;} <span class="comment">/* namespace sf */</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* CHECKBOXGROUP_H_ */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_aee82d7ae90923397f9c0e7c0bf4b279e"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#aee82d7ae90923397f9c0e7c0bf4b279e">sf::ui::CheckBoxGroup::removeCheckbox</a></div><div class="ttdeci">void removeCheckbox(CheckBox &amp;checkbox)</div><div class="ttdoc">Remove a checkbox to this group; This function does NOT delete the checkbox. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_a2cfb0472b640eec59a3f4803846072c8"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#a2cfb0472b640eec59a3f4803846072c8">sf::ui::CheckBoxGroup::addCheckBox</a></div><div class="ttdeci">void addCheckBox(CheckBox &amp;checkbox)</div><div class="ttdoc">Add a checkbox to this group. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_ae850c1714f7a5a453219886edb33af28"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#ae850c1714f7a5a453219886edb33af28">sf::ui::CheckBoxGroup::getCheckboxBegin</a></div><div class="ttdeci">std::set&lt; CheckBox * &gt;::const_iterator getCheckboxBegin() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBox_htm"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBox.htm">sf::ui::CheckBox</a></div><div class="ttdoc">A box which can be checked or not. </div><div class="ttdef"><b>Definition:</b> <a href="CheckBox_8hpp_source.htm#l00029">CheckBox.hpp:29</a></div></div>
<div class="ttc" id="namespacesf_htm"><div class="ttname"><a href="namespacesf.htm">sf</a></div><div class="ttdef"><b>Definition:</b> <a href="AbstractButton_8hpp_source.htm#l00023">AbstractButton.hpp:23</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_a5ac74c7de74c7fa11c1ee22249f52edd"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#a5ac74c7de74c7fa11c1ee22249f52edd">sf::ui::CheckBoxGroup::isCheckBoxInGroup</a></div><div class="ttdeci">bool isCheckBoxInGroup(CheckBox *checkbox) const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_addd05ac8e6437217ec91b1c64dbebd2b"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#addd05ac8e6437217ec91b1c64dbebd2b">sf::ui::CheckBoxGroup::onComponentEvent</a></div><div class="ttdeci">virtual void onComponentEvent(const ComponentEvent &amp;event)</div><div class="ttdoc">Called each time a component change. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1ComponentEvent_htm"><div class="ttname"><a href="classsf_1_1ui_1_1ComponentEvent.htm">sf::ui::ComponentEvent</a></div><div class="ttdoc">An event generate by a component. </div><div class="ttdef"><b>Definition:</b> <a href="ComponentEvent_8hpp_source.htm#l00037">ComponentEvent.hpp:37</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_a5927d831fc3b082572cd11a312244bfe"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#a5927d831fc3b082572cd11a312244bfe">sf::ui::CheckBoxGroup::countCheckbox</a></div><div class="ttdeci">unsigned int countCheckbox() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1ComponentObserver_htm"><div class="ttname"><a href="classsf_1_1ui_1_1ComponentObserver.htm">sf::ui::ComponentObserver</a></div><div class="ttdoc">A object updated each time a ComponentObservable change. </div><div class="ttdef"><b>Definition:</b> <a href="ComponentObserver_8hpp_source.htm#l00027">ComponentObserver.hpp:27</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_ad608973ab97a6e6c0dc68617e8ba6f8a"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#ad608973ab97a6e6c0dc68617e8ba6f8a">sf::ui::CheckBoxGroup::CheckBoxGroup</a></div><div class="ttdeci">CheckBoxGroup()</div><div class="ttdoc">A group of check box. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm">sf::ui::CheckBoxGroup</a></div><div class="ttdoc">A group that allow only one check box selected in the same time. </div><div class="ttdef"><b>Definition:</b> <a href="CheckBoxGroup_8hpp_source.htm#l00030">CheckBoxGroup.hpp:30</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1CheckBoxGroup_htm_a56f7d38610948a14c782eb72080dbf7d"><div class="ttname"><a href="classsf_1_1ui_1_1CheckBoxGroup.htm#a56f7d38610948a14c782eb72080dbf7d">sf::ui::CheckBoxGroup::getCheckboxEnd</a></div><div class="ttdeci">std::set&lt; CheckBox * &gt;::const_iterator getCheckboxEnd() const </div></div>
</div><!-- fragment --></div><!-- contents -->
        </div>
        <div id="footer-container">
            <div id="footer">
                <a href="http://www.sfml-dev.org">SFML Copyright © Laurent Gomila</a> - <a href="https://github.com/mathdu07/sfml-ui">SFML-UI Copyright © mathdu07</a> &nbsp;::&nbsp;
                Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen</a> &nbsp;::&nbsp;
            </div>
        </div>
    </body>
</html>
