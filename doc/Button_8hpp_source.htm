<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>SFML-UI - User Interface library for SFML</title>
        <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"/>
        <!--<link rel='stylesheet' type='text/css' href="http://fonts.googleapis.com/css?family=Ubuntu:400,700,400italic"/>-->
        <link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
    </head>
    <body>
        <div id="banner-container">
            <div id="banner">
                <span id="sfml">SFML-UI</span>
            </div>
        </div>
        <div id="content">
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li><li class="navelem"><a class="el" href="dir_c0a853e81d6f1c1f0a3eb7a27dc24256.htm">SFML</a></li><li class="navelem"><a class="el" href="dir_02c465a03076eb7f78f0386ccd2b72a1.htm">UI</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Button.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Copyright Â© 2013 mathdu07</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  This program is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  it under the terms of the GNU Lesser General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This program is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  GNU Lesser General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#ifndef BUTTON_H_</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#define BUTTON_H_</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;SFML/UI/AbstractButton.hpp&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;SFML/UI/IText.hpp&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacesf.htm">sf</a></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span>ui</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Button.htm">   29</a></span>&#160;<span class="keyword">class </span><a class="code" href="classsf_1_1ui_1_1Button.htm">Button</a> : <span class="keyword">public</span> <a class="code" href="classsf_1_1ui_1_1AbstractButton.htm">AbstractButton</a>, <span class="keyword">public</span> <a class="code" href="classsf_1_1ui_1_1IText.htm">IText</a></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">//CONSTRUCTORS/DESTRUCTORS -------------------------------------------</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Button.htm#a34476ba83cafed74d19fc40274b29a4b">   40</a></span>&#160;    <a class="code" href="classsf_1_1ui_1_1Button.htm#a34476ba83cafed74d19fc40274b29a4b">Button</a>()</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    : <a class="code" href="classsf_1_1ui_1_1AbstractButton.htm">AbstractButton</a>(),</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      m_textureFired(0), m_text(), m_clicked(false),</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      m_task(0)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Button.htm#a2345d4c10dabc56ee2b5260e29070535">   58</a></span>&#160;    <a class="code" href="classsf_1_1ui_1_1Button.htm#a2345d4c10dabc56ee2b5260e29070535">Button</a>(sf::Texture <span class="keyword">const</span> &amp;texture, sf::Texture <span class="keyword">const</span> &amp;textureFocused, sf::Texture <span class="keyword">const</span> &amp;textureFired)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    : <a class="code" href="classsf_1_1ui_1_1AbstractButton.htm">AbstractButton</a>(texture, textureFocused),</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      m_textureFired(&amp;textureFired), m_text(), m_clicked(false),</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      m_task(0)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> C&gt;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Button.htm#a9be88f9bc3eb274153100b3649d1771e">   76</a></span>&#160;    <a class="code" href="classsf_1_1ui_1_1Button.htm#a9be88f9bc3eb274153100b3649d1771e">Button</a>(C *<span class="keywordtype">object</span>, <span class="keywordtype">void</span> (C::*<span class="keyword">function</span>)())</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    : <a class="code" href="classsf_1_1ui_1_1AbstractButton.htm">AbstractButton</a>(),</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      m_textureFired(0), m_text(), m_clicked(false),</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      m_task(new <a class="code" href="namespacesf.htm">sf</a>::priv::ThreadMemberFunc&lt;C&gt;(function, object))</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> C&gt;</div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Button.htm#aa676fa6a18d601b327f250464977607a">   97</a></span>&#160;    <a class="code" href="classsf_1_1ui_1_1Button.htm#aa676fa6a18d601b327f250464977607a">Button</a>(C *<span class="keywordtype">object</span>, <span class="keywordtype">void</span> (C::*<span class="keyword">function</span>)(), sf::Texture <span class="keyword">const</span> &amp;texture, sf::Texture <span class="keyword">const</span> &amp;textureFocused, sf::Texture <span class="keyword">const</span> &amp;textureFired)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    : <a class="code" href="classsf_1_1ui_1_1AbstractButton.htm">AbstractButton</a>(texture, textureFocused),</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      m_textureFired(&amp;textureFired), m_text(), m_clicked(false),</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      m_task(new <a class="code" href="namespacesf.htm">sf</a>::priv::ThreadMemberFunc&lt;C&gt;(function, object))</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> F&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Button.htm#a0506bb808cccf1e8a5ee989fc6ecc08a">  114</a></span>&#160;    <a class="code" href="classsf_1_1ui_1_1Button.htm#a0506bb808cccf1e8a5ee989fc6ecc08a">Button</a>(F <span class="keyword">function</span>)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    : <a class="code" href="classsf_1_1ui_1_1AbstractButton.htm">AbstractButton</a>(),</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      m_textureFired(0), m_text(), m_clicked(false),</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      m_task(new <a class="code" href="namespacesf.htm">sf</a>::priv::ThreadFunctor&lt;F&gt;(function))</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> F&gt;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Button.htm#a70b622a0aa48ad9bec8449d756085cf9">  134</a></span>&#160;    <a class="code" href="classsf_1_1ui_1_1Button.htm#a70b622a0aa48ad9bec8449d756085cf9">Button</a>(F <span class="keyword">function</span>, sf::Texture <span class="keyword">const</span> &amp;texture, sf::Texture <span class="keyword">const</span> &amp;textureFocused, sf::Texture <span class="keyword">const</span> &amp;textureFired)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    : <a class="code" href="classsf_1_1ui_1_1AbstractButton.htm">AbstractButton</a>(texture, textureFocused),</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      m_textureFired(&amp;textureFired), m_text(), m_clicked(false),</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;      m_task(new <a class="code" href="namespacesf.htm">sf</a>::priv::ThreadFunctor&lt;F&gt;(function))</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="classsf_1_1ui_1_1Button.htm">Button</a>();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="comment">//METHODS ------------------------------------------------------------</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a90f9e81f5d03dfb4f65a2f92bd342896">onClick</a>();</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a57f04605445ea606e8f06c004df23de0">draw</a>(sf::RenderTarget&amp; target, sf::RenderStates states) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a464c7e5c70c12fca45b0b849b4235f1f">updateCoord</a>();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a1c0dc03207676fd06598ab47f9537c80">doClick</a>();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a57cbd85f68795fd7af44f1c6a18bbb4f">updateEvent</a>(sf::Event <span class="keyword">const</span> &amp;event);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#aae9e09424c3186ff8a7600d17710a4f2">updateFixed</a>(sf::Time delta);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">//GETTERS/SETTERS ----------------------------------------------------</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment"></span>    <span class="keywordtype">bool</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a3e8de7d998930111c322918a78b61b7a">isFired</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    sf::Texture <span class="keyword">const</span> *<a class="code" href="classsf_1_1ui_1_1Button.htm#a603bbe9d20c46f8ca8d78dd55211295e">getTextureFired</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a4e3075a2eb6f1bd0b61cf35e623edb14">setTextureFired</a>(sf::Texture <span class="keyword">const</span> &amp;textureFired);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> sf::String&amp; <a class="code" href="classsf_1_1ui_1_1Button.htm#a156d168c4e2a513d579f18f7f21d6898">getText</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#ab1bc7ada41f8712ea1ddb25ffdc42830">setText</a>(sf::String <span class="keyword">const</span> &amp;text);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> sf::Font* <a class="code" href="classsf_1_1ui_1_1Button.htm#a6c2a116dca8c927be37b9976b85d2bfb">getFont</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#acf49bd57d0782b733d6904dcfbe85415">setFont</a>(sf::Font <span class="keyword">const</span> &amp;font);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#acdf2fe6b64b143dd635077ebf0608a48">getFontSize</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a64cbb346f532b31e2effb02f134f57ad">setFontSize</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size);</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keyword">virtual</span> sf::Color <a class="code" href="classsf_1_1ui_1_1Button.htm#a0c0e485758e3325be6d0767134611686">getFontColor</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Button.htm#a20d793aaea05e68f2eb597171e188267">setFontColor</a>(sf::Color color);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="comment">//FIELDS -------------------------------------------------------------</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    sf::Texture <span class="keyword">const</span> *m_textureFired;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    sf::Text m_text;</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordtype">bool</span> m_clicked;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    sf::priv::ThreadFunc *m_task; <span class="comment">//The task executed each times the button is fired</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;};</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;} <span class="comment">/* namespace ui */</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;} <span class="comment">/* namespace sf */</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* BUTTON_H_ */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a64cbb346f532b31e2effb02f134f57ad"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a64cbb346f532b31e2effb02f134f57ad">sf::ui::Button::setFontSize</a></div><div class="ttdeci">virtual void setFontSize(unsigned int size)</div><div class="ttdoc">Set the font&#39;s size of the component. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_aae9e09424c3186ff8a7600d17710a4f2"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#aae9e09424c3186ff8a7600d17710a4f2">sf::ui::Button::updateFixed</a></div><div class="ttdeci">virtual void updateFixed(sf::Time delta)</div><div class="ttdoc">Update the component with the main loop&#39;s frequency Can be useful for animation, or time&#39;s needed stu...</div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a156d168c4e2a513d579f18f7f21d6898"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a156d168c4e2a513d579f18f7f21d6898">sf::ui::Button::getText</a></div><div class="ttdeci">virtual const sf::String &amp; getText() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a57cbd85f68795fd7af44f1c6a18bbb4f"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a57cbd85f68795fd7af44f1c6a18bbb4f">sf::ui::Button::updateEvent</a></div><div class="ttdeci">virtual void updateEvent(sf::Event const &amp;event)</div><div class="ttdoc">Update the component each time an event has been polled. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a70b622a0aa48ad9bec8449d756085cf9"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a70b622a0aa48ad9bec8449d756085cf9">sf::ui::Button::Button</a></div><div class="ttdeci">Button(F function, sf::Texture const &amp;texture, sf::Texture const &amp;textureFocused, sf::Texture const &amp;textureFired)</div><div class="ttdoc">Creates a button with textures that call a function or a functor (struct with operator() ) Do not for...</div><div class="ttdef"><b>Definition:</b> <a href="Button_8hpp_source.htm#l00134">Button.hpp:134</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a4e3075a2eb6f1bd0b61cf35e623edb14"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a4e3075a2eb6f1bd0b61cf35e623edb14">sf::ui::Button::setTextureFired</a></div><div class="ttdeci">void setTextureFired(sf::Texture const &amp;textureFired)</div><div class="ttdoc">Sets the texture fired. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_aa676fa6a18d601b327f250464977607a"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#aa676fa6a18d601b327f250464977607a">sf::ui::Button::Button</a></div><div class="ttdeci">Button(C *object, void(C::*function)(), sf::Texture const &amp;texture, sf::Texture const &amp;textureFocused, sf::Texture const &amp;textureFired)</div><div class="ttdoc">Creates a button with textures that call a function in a object Do not forget to set the font ! ...</div><div class="ttdef"><b>Definition:</b> <a href="Button_8hpp_source.htm#l00097">Button.hpp:97</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_acdf2fe6b64b143dd635077ebf0608a48"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#acdf2fe6b64b143dd635077ebf0608a48">sf::ui::Button::getFontSize</a></div><div class="ttdeci">virtual unsigned int getFontSize() const </div></div>
<div class="ttc" id="namespacesf_htm"><div class="ttname"><a href="namespacesf.htm">sf</a></div><div class="ttdef"><b>Definition:</b> <a href="AbstractButton_8hpp_source.htm#l00023">AbstractButton.hpp:23</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a464c7e5c70c12fca45b0b849b4235f1f"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a464c7e5c70c12fca45b0b849b4235f1f">sf::ui::Button::updateCoord</a></div><div class="ttdeci">virtual void updateCoord()</div><div class="ttdoc">Called when the component need update its geometry Inherit when you need to update some sprite...</div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a1c0dc03207676fd06598ab47f9537c80"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a1c0dc03207676fd06598ab47f9537c80">sf::ui::Button::doClick</a></div><div class="ttdeci">void doClick()</div><div class="ttdoc">Perform a click on the button. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a0506bb808cccf1e8a5ee989fc6ecc08a"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a0506bb808cccf1e8a5ee989fc6ecc08a">sf::ui::Button::Button</a></div><div class="ttdeci">Button(F function)</div><div class="ttdoc">Creates a button without textures that call a function or a functor (struct with operator() ) Do not ...</div><div class="ttdef"><b>Definition:</b> <a href="Button_8hpp_source.htm#l00114">Button.hpp:114</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm">sf::ui::Button</a></div><div class="ttdoc">A button which does a simply task when clicked. </div><div class="ttdef"><b>Definition:</b> <a href="Button_8hpp_source.htm#l00029">Button.hpp:29</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_acf49bd57d0782b733d6904dcfbe85415"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#acf49bd57d0782b733d6904dcfbe85415">sf::ui::Button::setFont</a></div><div class="ttdeci">virtual void setFont(sf::Font const &amp;font)</div><div class="ttdoc">Sets the font of the component&#39;s text. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a57f04605445ea606e8f06c004df23de0"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a57f04605445ea606e8f06c004df23de0">sf::ui::Button::draw</a></div><div class="ttdeci">virtual void draw(sf::RenderTarget &amp;target, sf::RenderStates states) const </div><div class="ttdoc">Draw the component to the render target. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a34476ba83cafed74d19fc40274b29a4b"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a34476ba83cafed74d19fc40274b29a4b">sf::ui::Button::Button</a></div><div class="ttdeci">Button()</div><div class="ttdoc">Creates a button without textures that does nothing. </div><div class="ttdef"><b>Definition:</b> <a href="Button_8hpp_source.htm#l00040">Button.hpp:40</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a0c0e485758e3325be6d0767134611686"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a0c0e485758e3325be6d0767134611686">sf::ui::Button::getFontColor</a></div><div class="ttdeci">virtual sf::Color getFontColor() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a20d793aaea05e68f2eb597171e188267"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a20d793aaea05e68f2eb597171e188267">sf::ui::Button::setFontColor</a></div><div class="ttdeci">virtual void setFontColor(sf::Color color)</div><div class="ttdoc">Sets the color&#39;s font of the text. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1AbstractButton_htm"><div class="ttname"><a href="classsf_1_1ui_1_1AbstractButton.htm">sf::ui::AbstractButton</a></div><div class="ttdoc">Abstract class for all component that are button-like. </div><div class="ttdef"><b>Definition:</b> <a href="AbstractButton_8hpp_source.htm#l00028">AbstractButton.hpp:28</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a2345d4c10dabc56ee2b5260e29070535"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a2345d4c10dabc56ee2b5260e29070535">sf::ui::Button::Button</a></div><div class="ttdeci">Button(sf::Texture const &amp;texture, sf::Texture const &amp;textureFocused, sf::Texture const &amp;textureFired)</div><div class="ttdoc">Creates a button with textures that does nothing Do not forget to set the font ! </div><div class="ttdef"><b>Definition:</b> <a href="Button_8hpp_source.htm#l00058">Button.hpp:58</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_ab1bc7ada41f8712ea1ddb25ffdc42830"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#ab1bc7ada41f8712ea1ddb25ffdc42830">sf::ui::Button::setText</a></div><div class="ttdeci">virtual void setText(sf::String const &amp;text)</div><div class="ttdoc">Sets the text&#39;s string of the component Don&#39;t forget to set the font. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1IText_htm"><div class="ttname"><a href="classsf_1_1ui_1_1IText.htm">sf::ui::IText</a></div><div class="ttdoc">An interface that allow component to have a text. </div><div class="ttdef"><b>Definition:</b> <a href="IText_8hpp_source.htm#l00028">IText.hpp:28</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a603bbe9d20c46f8ca8d78dd55211295e"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a603bbe9d20c46f8ca8d78dd55211295e">sf::ui::Button::getTextureFired</a></div><div class="ttdeci">sf::Texture const * getTextureFired() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a6c2a116dca8c927be37b9976b85d2bfb"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a6c2a116dca8c927be37b9976b85d2bfb">sf::ui::Button::getFont</a></div><div class="ttdeci">virtual const sf::Font * getFont() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a3e8de7d998930111c322918a78b61b7a"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a3e8de7d998930111c322918a78b61b7a">sf::ui::Button::isFired</a></div><div class="ttdeci">bool isFired() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a9be88f9bc3eb274153100b3649d1771e"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a9be88f9bc3eb274153100b3649d1771e">sf::ui::Button::Button</a></div><div class="ttdeci">Button(C *object, void(C::*function)())</div><div class="ttdoc">Creates a button without textures that call a function in a object Do not forget to set textures and ...</div><div class="ttdef"><b>Definition:</b> <a href="Button_8hpp_source.htm#l00076">Button.hpp:76</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Button_htm_a90f9e81f5d03dfb4f65a2f92bd342896"><div class="ttname"><a href="classsf_1_1ui_1_1Button.htm#a90f9e81f5d03dfb4f65a2f92bd342896">sf::ui::Button::onClick</a></div><div class="ttdeci">virtual void onClick()</div><div class="ttdoc">Called when the button is clicked Execute the task. </div></div>
</div><!-- fragment --></div><!-- contents -->
        </div>
        <div id="footer-container">
            <div id="footer">
                <a href="http://www.sfml-dev.org">SFML Copyright © Laurent Gomila</a> - <a href="https://github.com/mathdu07/sfml-ui">SFML-UI Copyright © mathdu07</a> &nbsp;::&nbsp;
                Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen</a> &nbsp;::&nbsp;
            </div>
        </div>
    </body>
</html>
