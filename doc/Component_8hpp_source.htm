<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>SFML-UI - User Interface library for SFML</title>
        <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1"/>
        <!--<link rel='stylesheet' type='text/css' href="http://fonts.googleapis.com/css?family=Ubuntu:400,700,400italic"/>-->
        <link rel="stylesheet" type="text/css" href="doxygen.css" title="default" media="screen,print" />
    </head>
    <body>
        <div id="banner-container">
            <div id="banner">
                <span id="sfml">SFML-UI</span>
            </div>
        </div>
        <div id="content">
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.htm"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.htm"><span>Classes</span></a></li>
      <li class="current"><a href="files.htm"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.htm"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_d44c64559bbebec7f509842c48db8b23.htm">include</a></li><li class="navelem"><a class="el" href="dir_c0a853e81d6f1c1f0a3eb7a27dc24256.htm">SFML</a></li><li class="navelem"><a class="el" href="dir_02c465a03076eb7f78f0386ccd2b72a1.htm">UI</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">Component.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *  Copyright Â© 2013 mathdu07</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *  This program is free software: you can redistribute it and/or modify</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *  it under the terms of the GNU Lesser General Public License as published by</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *  the Free Software Foundation, either version 3 of the License, or</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *  (at your option) any later version.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *  This program is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *  but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *  GNU Lesser General Public License for more details.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *  You should have received a copy of the GNU Lesser General Public License</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#ifndef COMPONENT_H_</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#define COMPONENT_H_</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &lt;SFML/Graphics.hpp&gt;</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;SFML/UI/ComponentObservable.hpp&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacesf.htm">sf</a></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span>ui</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classsf_1_1ui_1_1Component.htm">   29</a></span>&#160;<span class="keyword">class </span><a class="code" href="classsf_1_1ui_1_1Component.htm">Component</a> : <span class="keyword">public</span> Drawable, <span class="keyword">public</span> <a class="code" href="classsf_1_1ui_1_1ComponentObservable.htm">ComponentObservable</a></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">//CONSTRUCTORS/DESTRUCTORS -------------------------------------------</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="classsf_1_1ui_1_1Component.htm#ac479286e53c9940baf229e5ed4ec7184">Component</a>();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classsf_1_1ui_1_1Component.htm#ac479286e53c9940baf229e5ed4ec7184">Component</a>(sf::Texture <span class="keyword">const</span> &amp;texture);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">virtual</span> ~<a class="code" href="classsf_1_1ui_1_1Component.htm">Component</a>();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">//METHODS ------------------------------------------------------------</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#a4df4b2373f53cb24236c1a5e125d95d5">updateEvent</a>(sf::Event <span class="keyword">const</span> &amp;event) = 0;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#a944c251fcced34859846811a68134e1b">updateFixed</a>(sf::Time delta) = 0;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#a73ed884e53bbd365451cc02647471194">updateSize</a>();</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#ad7dabe06735fce695d29bdd0358826b2">move</a>(sf::Vector2f <span class="keyword">const</span> &amp;vector);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#ad7dabe06735fce695d29bdd0358826b2">move</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#a2ab2f64c8ad5c9617802ec5a8f98ca5f">draw</a>(sf::RenderTarget&amp; target, sf::RenderStates states) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#a83932e7b8da38e94e5ff95fb95b8fa81">updateCoord</a>();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">//GETTERS/SETTERS ----------------------------------------------------</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">const</span> sf::Texture* <a class="code" href="classsf_1_1ui_1_1Component.htm#a4dfee74c13c84ce9e1b239ca75a96a86">getTexture</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#af894e98611f19434f8c2f075cbb3cdb6">setTexture</a>(<span class="keyword">const</span> sf::Texture&amp; texture);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keyword">const</span> sf::Vector2f&amp; <a class="code" href="classsf_1_1ui_1_1Component.htm#a493a2fc95ddbed818df8dba09043bd06">getPosition</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#a2cd8b33f63f9bbf5def9c3e6af42b5a3">setPosition</a>(sf::Vector2f <span class="keyword">const</span> &amp;position);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classsf_1_1ui_1_1Component.htm#a2cd8b33f63f9bbf5def9c3e6af42b5a3">setPosition</a>(<span class="keywordtype">float</span> x, <span class="keywordtype">float</span> y);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keyword">virtual</span> sf::Vector2f <a class="code" href="classsf_1_1ui_1_1Component.htm#a450d6ee3a129e85949865d58c8e7a0b9">getSize</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="comment">//FIELDS -------------------------------------------------------------</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    sf::Sprite m_sprite; <span class="comment">// The component&#39;s sprite displayed</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    sf::Texture <span class="keyword">const</span> *m_texture; <span class="comment">//The component&#39;s texture</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment">//--------------------------------------------------------------------</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;};</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;} <span class="comment">/* namespace ui */</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;} <span class="comment">/* namespace sf */</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* COMPONENT_H_ */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_ac479286e53c9940baf229e5ed4ec7184"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#ac479286e53c9940baf229e5ed4ec7184">sf::ui::Component::Component</a></div><div class="ttdeci">Component()</div><div class="ttdoc">Creates an empty component, without texture. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a493a2fc95ddbed818df8dba09043bd06"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a493a2fc95ddbed818df8dba09043bd06">sf::ui::Component::getPosition</a></div><div class="ttdeci">const sf::Vector2f &amp; getPosition() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a4dfee74c13c84ce9e1b239ca75a96a86"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a4dfee74c13c84ce9e1b239ca75a96a86">sf::ui::Component::getTexture</a></div><div class="ttdeci">const sf::Texture * getTexture() const </div></div>
<div class="ttc" id="namespacesf_htm"><div class="ttname"><a href="namespacesf.htm">sf</a></div><div class="ttdef"><b>Definition:</b> <a href="AbstractButton_8hpp_source.htm#l00023">AbstractButton.hpp:23</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_ad7dabe06735fce695d29bdd0358826b2"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#ad7dabe06735fce695d29bdd0358826b2">sf::ui::Component::move</a></div><div class="ttdeci">void move(sf::Vector2f const &amp;vector)</div><div class="ttdoc">Move the component. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1ComponentObservable_htm"><div class="ttname"><a href="classsf_1_1ui_1_1ComponentObservable.htm">sf::ui::ComponentObservable</a></div><div class="ttdoc">The class who call the observers. </div><div class="ttdef"><b>Definition:</b> <a href="ComponentObservable_8hpp_source.htm#l00031">ComponentObservable.hpp:31</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm">sf::ui::Component</a></div><div class="ttdoc">The base class for all UI components. </div><div class="ttdef"><b>Definition:</b> <a href="Component_8hpp_source.htm#l00029">Component.hpp:29</a></div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_af894e98611f19434f8c2f075cbb3cdb6"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#af894e98611f19434f8c2f075cbb3cdb6">sf::ui::Component::setTexture</a></div><div class="ttdeci">void setTexture(const sf::Texture &amp;texture)</div><div class="ttdoc">Set the texture of the component. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a4df4b2373f53cb24236c1a5e125d95d5"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a4df4b2373f53cb24236c1a5e125d95d5">sf::ui::Component::updateEvent</a></div><div class="ttdeci">virtual void updateEvent(sf::Event const &amp;event)=0</div><div class="ttdoc">Update the component each time an event has been polled. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a2cd8b33f63f9bbf5def9c3e6af42b5a3"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a2cd8b33f63f9bbf5def9c3e6af42b5a3">sf::ui::Component::setPosition</a></div><div class="ttdeci">void setPosition(sf::Vector2f const &amp;position)</div><div class="ttdoc">Set the component&#39;s position. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a450d6ee3a129e85949865d58c8e7a0b9"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a450d6ee3a129e85949865d58c8e7a0b9">sf::ui::Component::getSize</a></div><div class="ttdeci">virtual sf::Vector2f getSize() const </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a73ed884e53bbd365451cc02647471194"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a73ed884e53bbd365451cc02647471194">sf::ui::Component::updateSize</a></div><div class="ttdeci">void updateSize()</div><div class="ttdoc">Update the size of the component Call it when you update your texture after it was set...</div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a83932e7b8da38e94e5ff95fb95b8fa81"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a83932e7b8da38e94e5ff95fb95b8fa81">sf::ui::Component::updateCoord</a></div><div class="ttdeci">virtual void updateCoord()</div><div class="ttdoc">Called when the component need update its geometry Inherit when you need to update some sprite...</div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a2ab2f64c8ad5c9617802ec5a8f98ca5f"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a2ab2f64c8ad5c9617802ec5a8f98ca5f">sf::ui::Component::draw</a></div><div class="ttdeci">virtual void draw(sf::RenderTarget &amp;target, sf::RenderStates states) const </div><div class="ttdoc">Draw the component to the render target. </div></div>
<div class="ttc" id="classsf_1_1ui_1_1Component_htm_a944c251fcced34859846811a68134e1b"><div class="ttname"><a href="classsf_1_1ui_1_1Component.htm#a944c251fcced34859846811a68134e1b">sf::ui::Component::updateFixed</a></div><div class="ttdeci">virtual void updateFixed(sf::Time delta)=0</div><div class="ttdoc">Update the component with the main loop&#39;s frequency Can be useful for animation, or time&#39;s needed stu...</div></div>
</div><!-- fragment --></div><!-- contents -->
        </div>
        <div id="footer-container">
            <div id="footer">
                <a href="http://www.sfml-dev.org">SFML Copyright © Laurent Gomila</a> - <a href="https://github.com/mathdu07/sfml-ui">SFML-UI Copyright © mathdu07</a> &nbsp;::&nbsp;
                Documentation generated by <a href="http://www.doxygen.org/" title="doxygen website">doxygen</a> &nbsp;::&nbsp;
            </div>
        </div>
    </body>
</html>
